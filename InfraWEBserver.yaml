AWSTemplateFormatVersion: '2010-09-09'
Description: Formation para WebServer 35CLD Infra com ECS e ECR

Parameters:
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16
  Subnet1Cidr:
    Type: String
    Default: 10.0.1.0/24
  ECSOptimizedAMI:
    Type: "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>"
    Default: "/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id"
    Description: "Latest Amazon ECS-Optimized AMI."

Resources:

  # ==========================
  # 1. Criação da VPC e Rede
  # ==========================

  WebServerVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: WebServerVPC

  WebServerInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: WebServerIGW

  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref WebServerVPC
      InternetGatewayId: !Ref WebServerInternetGateway

  WebServerPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref WebServerVPC
      CidrBlock: !Ref Subnet1Cidr
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: WebServerPublicSubnet1

  # ==========================
  # 2. Security Group
  # ==========================

  SGWEBServer:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security Group para Web Server e ECS"
      VpcId: !Ref WebServerVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          CidrIp: 0.0.0.0/0  
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0  
        - IpProtocol: tcp
          FromPort: 51678
          ToPort: 51678
          CidrIp: 0.0.0.0/0 
        - IpProtocol: tcp
          FromPort: 2376
          ToPort: 2376
          CidrIp: 0.0.0.0/0  
        - IpProtocol: tcp
          FromPort: 32768
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 0
          CidrIp: 0.0.0.0/0

  # ==========================
  # 3. ECS Cluster, IAM e EC2 Instance
  # ==========================

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: "MyECSCluster"

  ECSInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: 
                - "ec2.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
        - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"

  ECSInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref ECSInstanceRole

  ECSInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: "t2.micro"
      ImageId: !Ref ECSOptimizedAMI
      IamInstanceProfile: !Ref ECSInstanceProfile
      SecurityGroupIds:
        - !Ref SGWEBServer
      SubnetId: !Ref WebServerPublicSubnet1
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          echo ECS_CLUSTER=${ECSCluster} >> /etc/ecs/ecs.config
          echo ECS_ENABLE_CONTAINER_METADATA=true >> /etc/ecs/ecs.config
          systemctl enable --now ecs
      Tags:
        - Key: Name
          Value: ECSInstance
