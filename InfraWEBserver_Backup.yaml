AWSTemplateFormatVersion: '2010-09-09'
Description: Formation para WebServer 35CLD Infra

Parameters:
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16
  Subnet1Cidr:
    Type: String
    Default: 10.0.1.0/24
  Subnet2Cidr:
    Type: String
    Default: 10.0.2.0/24
  Subnet3Cidr:
    Type: String
    Default: 10.0.3.0/24

Resources:

#Criação da VPC 

  WebServerVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      Tags:
        - Key: Name
          Value: WebServerVPC

  WebServerInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: WebServerIGW

  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref WebServerVPC
      InternetGatewayId: !Ref WebServerInternetGateway

  WebServerPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref WebServerVPC
      Tags:
        - Key: Name
          Value: WebServerPublicRouteTable

  WebServerPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachInternetGateway
    Properties:
      RouteTableId: !Ref WebServerPublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref WebServerInternetGateway

  WebServerPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref WebServerVPC
      CidrBlock: !Ref Subnet1Cidr
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: WebServerPublicSubnet1

  WebServerPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref WebServerVPC
      CidrBlock: !Ref Subnet2Cidr
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: WebServerPublicSubnet2

  WebServerPublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref WebServerVPC
      CidrBlock: !Ref Subnet3Cidr
      AvailabilityZone: !Select [2, !GetAZs '']
      Tags:
        - Key: Name
          Value: WebServerPublicSubnet3

  WebServerRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref WebServerPublicSubnet1
      RouteTableId: !Ref WebServerPublicRouteTable

  WebServerRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref WebServerPublicSubnet2
      RouteTableId: !Ref WebServerPublicRouteTable

  WebServerRouteTableAssociation3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref WebServerPublicSubnet3
      RouteTableId: !Ref WebServerPublicRouteTable

# Security Group do WEB Server

  SGWEBServer:
    Type: AWS::EC2::SecurityGroup
    Properties:
      # Nome do Security Group
      GroupName: "SGWEBServer"
      GroupDescription: "Security Group para Web Server"
      
      # Importa o VPC ID exportado pelo outro stack
      VpcId: !Ref WebServerVPC

      # Regras de entrada
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 177.160.133.69/32

      # Regras de saída 
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 0
          CidrIp: 0.0.0.0/0
